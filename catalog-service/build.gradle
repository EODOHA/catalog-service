plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2024.0.0") // 출시 연도로 스프링 클라우드 버전 정의.
	set('testcontainersVersion', "1.17.3") // 테스트컨테이너 버전 지정.
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.testcontainers:postgresql' // PostgreSQL DB에 대한 컨테이너 관리 기능 제공.
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql' // flyway 10.x 이상부터는 명시!!!
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" // Cloud 의존성 관리를 위한 BOM.
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}" // 테스트컨테이너 의존성 관리를 위한 BOM.
	}
}

bootRun {
	systemProperty 'spring.profiles.active', 'testdata'
}

tasks.named('test') {
	useJUnitPlatform()
}